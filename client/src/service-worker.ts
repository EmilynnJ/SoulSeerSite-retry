// @ts-nocheck
import { precacheAndRoute, cleanupOutdatedCaches, createHandlerBoundToURL } from "workbox-precaching";
import { registerRoute, NavigationRoute } from "workbox-routing";
import { StaleWhileRevalidate, CacheFirst } from "workbox-strategies";
import { CacheableResponsePlugin } from "workbox-cacheable-response";
import { ExpirationPlugin } from "workbox-expiration";

// Precache all assets generated by Vite build
precacheAndRoute(self.__WB_MANIFEST || []);
cleanupOutdatedCaches();

// App-shell-style navigation routing (for SPA)
registerRoute(
  new NavigationRoute(
    createHandlerBoundToURL("/index.html"),
    { denylist: [/\/api\//, /\/ws/] }
  )
);

// Runtime caching for images (CacheFirst)
registerRoute(
  ({ request }) => request.destination === "image",
  new CacheFirst({
    cacheName: "images",
    plugins: [
      new ExpirationPlugin({ maxEntries: 60, maxAgeSeconds: 30 * 24 * 60 * 60 }),
      new CacheableResponsePlugin({ statuses: [0, 200] }),
    ],
  })
);

// Runtime caching for API (StaleWhileRevalidate, except auth)
registerRoute(
  ({ url }) => url.pathname.startsWith("/api/") && !url.pathname.startsWith("/api/auth"),
  new StaleWhileRevalidate({
    cacheName: "api",
    plugins: [new CacheableResponsePlugin({ statuses: [0, 200] })],
  })
);

// Offline fallback
self.addEventListener("fetch", (event) => {
  if (event.request.mode === "navigate") {
    event.respondWith(
      fetch(event.request).catch(() => caches.match("/offline.html"))
    );
  }
});